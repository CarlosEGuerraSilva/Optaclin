<Window x:Class="Optaclin.GestionarPacientes"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Optaclin"
        mc:Ignorable="d"
        Title="GestionarPacientes" Height="642" Width="800" Loaded="Window_Loaded" WindowStartupLocation="CenterScreen">
    <Window.Resources>
        <Storyboard x:Key="AbrirEditor">
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="EditGrid">
                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"/>
                <DiscreteObjectKeyFrame KeyTime="0:0:0.06" Value="{x:Static Visibility.Visible}"/>
                <DiscreteObjectKeyFrame KeyTime="0:0:0.18" Value="{x:Static Visibility.Visible}"/>
                <DiscreteObjectKeyFrame KeyTime="0:0:0.3" Value="{x:Static Visibility.Visible}"/>
            </ObjectAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="EditGrid">
                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.06" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.18" Value="0.5"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="EditGrid">
                <EasingDoubleKeyFrame KeyTime="0:0:0.06" Value="280"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.18" Value="140"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="CerrarEditor">
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="EditGrid">
                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                <DiscreteObjectKeyFrame KeyTime="0:0:0.12" Value="{x:Static Visibility.Visible}"/>
                <DiscreteObjectKeyFrame KeyTime="0:0:0.24" Value="{x:Static Visibility.Visible}"/>
                <DiscreteObjectKeyFrame KeyTime="0:0:0.3" Value="{x:Static Visibility.Collapsed}"/>
            </ObjectAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="EditGrid">
                <SplineDoubleKeyFrame KeyTime="0" Value="1"/>
                <SplineDoubleKeyFrame KeyTime="0:0:0.12" Value="0.5"/>
                <SplineDoubleKeyFrame KeyTime="0:0:0.24" Value="0"/>
                <SplineDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="EditGrid">
                <SplineDoubleKeyFrame KeyTime="0" Value="0"/>
                <SplineDoubleKeyFrame KeyTime="0:0:0.12" Value="140"/>
                <SplineDoubleKeyFrame KeyTime="0:0:0.24" Value="280"/>
                <SplineDoubleKeyFrame KeyTime="0:0:0.3" Value="280"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <local:OptaclinDataSet x:Key="optaclinDataSet"/>
        <CollectionViewSource x:Key="crearPacientesViewSource" Source="{Binding CrearPacientes, Source={StaticResource optaclinDataSet}}"/>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style x:Key="BotonesAzules" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#FF0086CB"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#FF0086CB"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#FF006CA5"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#FF006CA5"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="#FF0094E0"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#FF0094E0"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="Gray"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Window.Triggers>
        <EventTrigger RoutedEvent="FrameworkElement.Loaded">
        </EventTrigger>
    </Window.Triggers>
    <Grid>
        <Grid x:Name="Header" Margin="10,9.6,10,0" Height="52.78" VerticalAlignment="Top">
            <TextBlock HorizontalAlignment="Left" Margin="0,0.4,0,0" TextWrapping="Wrap" Text="Gestión de pacientes" VerticalAlignment="Center" FontFamily="Georgia" FontSize="36" Foreground="#FF007BBA"/>
            <TextBlock x:Name="TBHora" HorizontalAlignment="Right" Margin="0,0,10,0" TextWrapping="Wrap" Text="HH:MM:SS XX" VerticalAlignment="Center" FontFamily="Georgia" FontSize="20"/>

        </Grid>
        <Grid x:Name="Content" Margin="10,78.647,10,10" DataContext="{StaticResource crearPacientesViewSource}">
            <Button x:Name="NuevoPaciente" Content="Nuevo" HorizontalAlignment="Left" Height="38.4" VerticalAlignment="Top" Width="156.8" Foreground="White" Background="#FF007BBB" BorderBrush="#FF007BBB" FontFamily="Georgia" FontSize="16" Click="NuevoPaciente_Click" Style="{DynamicResource BotonesAzules}"/>
            <Button x:Name="EditarPaciente" Content="Modificar" HorizontalAlignment="Left" Height="38.4" VerticalAlignment="Top" Width="156.8" Foreground="White" Background="#FF007BBB" BorderBrush="#FF007BBB" FontFamily="Georgia" FontSize="16" Margin="161.8,0,0,0" Click="EditarPaciente_Click" Style="{DynamicResource BotonesAzulesApp}"/>
            <DataGrid x:Name="crearPacientesDataGrid" AutoGenerateColumns="False" EnableRowVirtualization="True" ItemsSource="{Binding}" Margin="0,43,-0.4,0.153" RowDetailsVisibilityMode="VisibleWhenSelected" SelectedIndex="0" BeginningEdit="CrearPacientesDataGrid_BeginningEdit">
                <DataGrid.Columns>
                    <DataGridTextColumn x:Name="idColumn" Binding="{Binding Id}" Header="Id" Width="SizeToHeader"/>
                    <DataGridTextColumn x:Name="nombresColumn" Binding="{Binding Nombres}" Header="Nombres" Width="150"/>
                    <DataGridTextColumn x:Name="apellidosColumn" Binding="{Binding Apellidos}" Header="Apellidos" Width="150"/>
                    <DataGridTextColumn x:Name="alergiasColumn" Binding="{Binding Alergias}" Header="Alergias" Width="150"/>
                    <DataGridTextColumn x:Name="problemaVisualColumn" Binding="{Binding ProblemaVisual}" Header="Problema Visual" Width="100"/>
                    <DataGridTextColumn x:Name="telefonoColumn" Binding="{Binding Telefono}" Header="Telefono" Width="120"/>
                    <DataGridTextColumn x:Name="correoColumn" Binding="{Binding Correo}" Header="Correo" Width="150"/>
                </DataGrid.Columns>
            </DataGrid>
        </Grid>
        <Grid x:Name="EditGrid" Margin="0,0,-0.4,-0.2" Background="#FF252525" RenderTransformOrigin="0.5,0.5" HorizontalAlignment="Right" Width="326">
            <Grid.RenderTransform>
                <TransformGroup>
                    <ScaleTransform/>
                    <SkewTransform/>
                    <RotateTransform/>
                    <TranslateTransform X="330"/>
                </TransformGroup>
            </Grid.RenderTransform>
            <TextBlock Height="44.8" Margin="10,10,10,0" TextWrapping="Wrap" Text="Datos del paciente" VerticalAlignment="Top" FontSize="20" TextAlignment="Center" Foreground="White" FontWeight="Bold"/>
            <StackPanel DataContext="{StaticResource crearPacientesViewSource}" Margin="55,69,53,173" Orientation="Vertical">
                <Label Content="Id:" Foreground="White" FontWeight="Bold" Height="25" Margin="0" Visibility="Collapsed"/>
                <TextBox x:Name="idTextBox" Height="23" Margin="0,0,0.4,0" Text="{Binding Id, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Visibility="Collapsed"/>
                <Label Content="Nombres:" Foreground="White" FontWeight="Bold" Height="26" Margin="0"/>
                <TextBox x:Name="nombresTextBox" Height="23" Margin="0,0,0.4,0" Text="{Binding Nombres, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}"/>
                <Label Content="Apellidos:" Foreground="White" FontWeight="Bold" Height="26" Margin="0"/>
                <TextBox x:Name="apellidosTextBox" Height="24" Margin="0,0,0.4,0" Text="{Binding Apellidos, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}"/>
                <Label Content="Alergias:" Foreground="White" FontWeight="Bold" Height="26" Margin="0"/>
                <TextBox x:Name="alergiasTextBox" Height="23" Margin="0,0,0.4,0" Text="{Binding Alergias, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}"/>
                <Label Content="Problema Visual:" Foreground="White" FontWeight="Bold" Height="25" Margin="0"/>
                <TextBox x:Name="problemaVisualTextBox" Height="23" Margin="0,0,0.4,0" Text="{Binding ProblemaVisual, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}"/>
                <Label Content="Telefono:" Foreground="White" FontWeight="Bold" Height="25" Margin="0"/>
                <TextBox x:Name="telefonoTextBox" Height="23" Margin="0,0,0.4,0" Text="{Binding Telefono, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}"/>
                <Label Content="Correo:" Foreground="White" FontWeight="Bold" Height="26" Margin="0"/>
                <TextBox x:Name="correoTextBox" Height="23" Margin="0,0,0.4,0" Text="{Binding Correo, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}"/>
            </StackPanel>
            <Button x:Name="Guardar" Content="Guardar" HorizontalAlignment="Center" Height="35" Margin="55,470,53,0" VerticalAlignment="Top" Width="218" Background="#FF007BBB" Foreground="White" BorderBrush="#FF007BBB" Click="Guardar_Click" FontSize="16" Style="{DynamicResource BotonesAzules}"/>
            <Button x:Name="Eliminar" Content="Eliminar" HorizontalAlignment="Center" Height="35" Margin="55,510,53,0" VerticalAlignment="Top" Width="218" Background="#FF007BBB" Foreground="White" BorderBrush="#FF007BBB" Click="Eliminar_Click" FontSize="16" Style="{DynamicResource BotonesAzules}"/>
            <Button x:Name="Cancelar" Content="Cancelar" HorizontalAlignment="Center" Height="34" Margin="55,551,53,0" VerticalAlignment="Top" Width="218" Background="#FF007BBB" Foreground="White" BorderBrush="#FF007BBB" Click="Cancelar_Click" FontSize="16" Style="{DynamicResource BotonesAzules}"/>
        </Grid>

    </Grid>
</Window>
